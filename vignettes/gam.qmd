---
format:
  md:
    prefer-html: true
---

# GAM


```{r, include = FALSE}
## this vignette is in .Rbuildignore because lme4 is not available on old CRAN
## test machines.

knitr::opts_chunk$set(
  collapse = TRUE,
  fig.width = 9,
  fig.asp = .4,
  out.width = "100%",
  warning = FALSE,
  message = FALSE,
  comment = "#>"
)

library(ggplot2)

theme_clean <- function() {
  theme_minimal() +
    theme(panel.grid.minor = element_blank(),
          strip.text = element_text(size = rel(1), hjust = 0),
          strip.background = element_blank(),
          legend.position = "bottom")
}
ggplot2::theme_set(theme_clean())
```

## Estimate a Generalized Additive Model

We will estimate a GAM model using the `mgcv` package and the `simdat` dataset distributed with the `itsadug` package:

```{r}
library(marginaleffects)
library(itsadug)
library(mgcv)

simdat$Subject <- as.factor(simdat$Subject)

dim(simdat)
head(simdat)
```

Fit a model with a random effect and group-time smooths:

```{r}
model <- bam(Y ~ Group + s(Time, by = Group) + s(Subject, bs = "re"),
             data = simdat)

summary(model)
```

## Adjusted Predictions: `predictions()` and `plot_predictions()`

Compute adjusted predictions for each observed combination of regressor in the dataset used to fit the model. This gives us a dataset with the same number of rows as the original data, but new columns with predicted values and uncertainty estimates:

```{r}
pred <- predictions(model)
dim(pred)
head(pred)
```

We can easily plot adjusted predictions for different values of a regressor using the `plot_predictions()` function:

```{r}
plot_predictions(model, condition = "Time")
```

## Marginal Effects: `slopes()` and `plot_slopes()`

Marginal effects are slopes of the prediction equation. They are an observation-level quantity. The `slopes()` function produces a dataset with the same number of rows as the original data, but with new columns for the slop and uncertainty estimates:

```{r}
mfx <- slopes(model, variables = "Time")
head(mfx)
```

We can plot marginal effects for different values of a regressor using the `plot_slopes()` function.
This next plot shows the slope of the prediction equation, that is, the slope of the previous plot, at every value of the `Time` variable.

```{r}
plot_slopes(model, variables = "Time", condition = "Time")
```

The marginal effects in this plot can be interpreted as measuring the change in `Y` that is associated with a small increase in `Time`, for different baseline values of `Time`.

## Excluding terms

The `predict()` method of the `mgcv` package allows users to "exclude" some smoothing terms, using the `exclude` argument. You can pass the same argument to any function in the `marginaleffects` package:

```{r}
predictions(model, newdata = "mean", exclude = "s(Subject)")
```

See the documentation in `?mgcv:::predict.bam` for details.

