---
format:
  md:
    prefer-html: true
---

# Heterogeneity
author: "Vincent Arel-Bundock"


This short vignette illustrates how to use recursive partitioning to explore treatment effect heterogeneity. This exercise inspired by [Scholbeck et al. 2022](https://arxiv.org/abs/2201.08837) and their concept of "cATE".

As pointed out in other vignettes, most of the quantities estimated by the `marginaleffects` package are "conditional", in the sense that they vary based on the values of all the predictors in our model. For instance, consider a Poisson regression that models the number of hourly bike rentals in Washington, DC:

```{r}
#| include: false
library(marginaleffects)
library(partykit)
```

```{r}
library(marginaleffects)
library(partykit)
data(bikes, package = "fmeffects")

mod <- glm(
    count ~ season * weekday + weather * temp,
    data = bikes, family = quasipoisson)
```

We can use the `comparisons()` function to estimate how the predicted outcome changes for a 5 celsius increase in temperature:


```{r}
#| warnings: false
cmp <- comparisons(mod, variables = list(temp = 5))
cmp
```

The output printed above includes 727 rows: 1 for each of the rows in the original `bikes` dataset. Indeed, since the "effect" of a 5 unit increase depends on the values of covariates, different unit of observation will typically be associated with different contrasts.

In such cases, a common strategy is to compute an average difference, as described in the [G-Computation vignette:](vignettes/gcomputation/)


```{r}
avg_comparisons(mod, variables = list(temp = 5))
```

Alternatively, one may be interested in exploring heterogeneity in effect sizes in different subsets of the data. A convenient way to achieve this is to use the `ctree` function of the `partykit` package. This function allows us to use recursive partitioning (conditional inference trees) to find subspaces with reasonably homogenous estimates, and to report useful graphical and textual summaries.

Imagine that we are particularly interested in how the effect of temperature on bike rentals varies based on day of the week and season:

```{r}
tree <- ctree(
    estimate ~ weekday + season,
    data = cmp,
    control = ctree_control(maxdepth = 2)
)
```

Now we can use the `plot()` function to draw the distributions of estimates for the effect of an increase of 5C on bike rentals, by week day and season:

```{r}
plot(tree)
```

To obtain conditional average estimates for each subspace, we first use the `predict()` function in order to place each observation in the dataset in its corresponding "bucket" or "node". Then, we use the `by` argument to indicate that `comparisons()` should compute average estimates for each of the nodes in the tree:


```{r}
dat <- transform(bikes, nodeid = predict(tree, type = "node"))
comparisons(mod,
    variables = list(temp = 5),
    newdata = dat,
    by = "nodeid")
```

The four `nodeid` values correspond to the terminal nodes in this tree:

```{r}
print(tree)
```
