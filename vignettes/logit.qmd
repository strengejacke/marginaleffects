---
format:
  md:
    prefer-html: true
---

# Logit


```{r}
#| include: false
options(modelsummary_factory_default = "gt")
## this vignette is in .Rbuildignore

knitr::opts_chunk$set(
  collapse = TRUE,
  fig.width = 9,
  fig.asp = .4,
  out.width = "100%",
  warning = FALSE,
  message = FALSE,
  comment = "#>"
)
library(ggplot2)
theme_set(theme_minimal())
```

This vignette replicates some of the analyses in this excellent blog post by Frank Harrell: [Avoiding One-Number Summaries of Treatment Effects for RCTs with Binary Outcomes](https://www.fharrell.com/post/rdist/). Here, we show how one-number summaries and the entire distribution unit-level contrasts can be easily computed with `comparisons()`.

Dr. Harrell discusses summaries from logistic regression models in the blog post above. He focuses on a context in which one is interested in comparing two groups, such as in randomized controlled trials. He highlights potential pitfalls of presenting "one-number summaries", e.g., odds ratio and mean proportion difference. Finally, he recommends focusing on the entire distribution of proportion difference between groups.

For clarification, we use the following terms interchangeably in the context of logistic regression where the covariate of interest is categorical:

- Contrast
- Proportion difference
- Risk difference
- Absolute risk reduction

## Data

We focus on subset data from the [GUSTO-I study](https://www.nejm.org/doi/full/10.1056/NEJM199309023291001), where patients were randomly assigned to accelerated tissue plasminogen activator (tPA) or streptokinase (SK).

Load libraries, data and fit a covariate-adjusted logistic regression model. 

```{r, message = FALSE, warning = FALSE}
library(marginaleffects)
library(modelsummary)
library(ggplot2)
library(rms)

load(url(
"https://github.com/vincentarelbundock/modelarchive/raw/main/data-raw/gusto.rda"
))

gusto <- subset(gusto, tx %in% c("tPA", "SK"))
gusto$tx <- factor(gusto$tx, levels = c("tPA", "SK"))

mod <- glm(
    day30 ~ tx + rcs(age, 4) + Killip + pmin(sysbp, 120) + lsp(pulse, 50) +
    pmi + miloc + sex, family = "binomial",
    data = gusto)
```

### One-Number Summaries

As usual, we can produce a one-number summary of the relationship of interest by exponentiating the coefficients, which yields an Odds Ratio (OR):

```{r, warning = FALSE}
modelsummary(mod, exponentiate = TRUE, coef_omit = "^(?!txSK)") 
```

Unlike ORs, adjusted risk differences vary from individual to individual based on the values of the control variables. The `comparisons()` function can compute adjusted risk differences for every individual. Here, we display only the first 6 of them:

```{r}
comparisons(
    mod,
    variables = "tx")
```

Population-averaged (aka "marginal") adjusted risk difference ([see this vignette](gcomputation.html)) can be obtained using the `avg_*()` functions or using the `by` argument:

```{r}
avg_comparisons(mod, variables = "tx")
```

The `comparisons()` function above computed the predicted probability of mortality (`day30==1`) for each observed row of the data in two counterfactual cases: when `tx` is "SK", and when `tx` is "tPA". Then, it computed the differences between these two sets of predictions. Finally, it computed the population-average of risk differences.

Instead of risk *differences*, we could compute population-averaged (marginal) adjusted risk *ratios*:

```{r}
avg_comparisons(
    mod,
    variables = "tx",
    comparison = "lnratioavg",
    transform = exp)
```

Population-averaged (marginal) odds ratios:

```{r}
avg_comparisons(
    mod,
    variables = "tx",
    comparison = "lnoravg",
    transform = "exp")
```

### Unit-level Summaries

Instead of estimating one-number summaries, we can focus on unit-level proportion differences using `comparisons()`. This function applies the fitted logistic regression model to predict outcome probabilities for each patient, i.e., unit-level. 

```{r}
cmp <- comparisons(mod, variables = "tx")
cmp
```

Show the predicted probability for individual patients under both treatment alternatives.

```{r, fig.asp = 1}
ggplot(cmp, aes(predicted_hi, predicted_lo)) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0, linetype = 3) +
  coord_fixed() +
  labs(x = "SK", y = "tPA")
```

We can present the entire distribution of unit-level proportion differences an a cumulative distribution function:


```{r}
ggplot(cmp, aes(estimate)) + stat_ecdf()
```

Or the same information as a histogram with the mean and median.

```{r}
ggplot(cmp, aes(estimate)) +
  geom_histogram(bins = 100) +
  geom_vline(xintercept = mean(cmp$estimate), color = "orange") +
  geom_vline(xintercept = median(cmp$estimate), color = "darkgreen") +
  labs(x = "SK - TPA", title = "Distribution of unit-level contrasts")
```

### Appendix

`comparisons()` performed the following calculations under the hood:

```{r}
d  <- gusto

d$tx = "SK"
predicted_hi <- predict(mod, newdata = d, type = "response")

d$tx = "tPA"
predicted_lo <- predict(mod, newdata = d, type = "response")

comparison <- predicted_hi - predicted_lo
```

The original dataset contains 30510 patients, thus `comparisons()` generates an output with same amount of rows.

```{r}
nrow(gusto)
```

```{r}
nrow(cmp)
```



